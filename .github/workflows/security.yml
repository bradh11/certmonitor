# Security scanning and code quality workflow
name: Security & Quality

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    # Run security scans weekly on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.6.17"

      - name: Install dependencies
        run: |
          uv sync --group dev

      - name: Run safety check for Python dependencies
        run: |
          uv run pip install safety
          uv run safety check --json --output safety-report.json || true

      - name: Run bandit security linter
        run: |
          uv run pip install bandit
          uv run bandit -r certmonitor/ -f json -o bandit-report.json || true

      - name: Run semgrep security scanner
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/python
        if: github.actor != 'dependabot[bot]'

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.6.17"

      - name: Install dependencies
        run: |
          uv sync --group dev

      - name: Run mypy type checker
        run: |
          uv run pip install mypy
          uv run mypy certmonitor/ --ignore-missing-imports || true

      - name: Generate coverage report
        run: |
          uv run pytest --cov=certmonitor --cov-report=xml --cov-report=html

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
